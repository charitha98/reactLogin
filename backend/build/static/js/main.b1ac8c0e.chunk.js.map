{"version":3,"sources":["UserStore.js","InputField.js","SubmitButton.js","LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["extendObservable","this","laoding","isLoggedIn","username","InputField","className","type","props","placeholder","value","onChange","e","target","React","Component","SumbitButton","disabled","onClick","text","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","a","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","resetForm","alert","msg","console","log","setInputValue","doLogin","App","loading","doLogout","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1ac8c0e.chunk.js","sourcesContent":["import { extendObservable } from 'mobx';\r\n\r\nclass UserStore {\r\n    constructor() {\r\n        extendObservable(this, {\r\n\r\n            laoding: true,\r\n            isLoggedIn: false,\r\n            username: ''\r\n\r\n        })\r\n    }\r\n}\r\n\r\nexport default new UserStore();","import React from 'react';\r\n\r\nclass InputField extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"inputField\">\r\n          \r\n          <input\r\n            className='input'\r\n            type={this.props.type}\r\n            placeholder={this.props.placeholder}\r\n            value={this.props.value}\r\n            onChange={ (e) => this.props.onChange(e.target.value) }\r\n          >\r\n          </input>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputField;","import React from 'react';\r\n\r\nclass SumbitButton extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"submitButton\">\r\n          \r\n          <button\r\n            className='btn'\r\n            disabled={this.props.disabled}\r\n            onClick={ () => this.props.onClick() }\r\n          >\r\n            {this.props.text}\r\n          </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SumbitButton;","import React from 'react';\r\nimport InputField from './InputField';\r\nimport SumbitButton from './SubmitButton';\r\nimport UserStore from './UserStore';\r\n\r\nclass LoginForm extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      buttonDisabled: false\r\n    }\r\n  }\r\n\r\n  setInputValue(property, val){\r\n    val = val.trim();\r\n    if (val.length > 12){\r\n      return;\r\n    }\r\n    this.setState({\r\n      [property]: val\r\n    })\r\n  }\r\n\r\n  resetForm(){\r\n    this.setState({\r\n      username: '',\r\n      password: '',\r\n      buttonDisabled: false\r\n    })\r\n  }\r\n\r\n  async doLogin(){\r\n    if (!this.state.username){\r\n      return;\r\n    }\r\n    if (!this.state.password){\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      buttonDisabled: true\r\n    })\r\n\r\n    try {\r\n      let res = await fetch('/login', {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          username: this.state.username,\r\n          password: this.state.password\r\n        })\r\n      });\r\n\r\n      let result = await res.json();\r\n\r\n      if (result && result.success) {\r\n        UserStore.isLoggedIn = true;\r\n        UserStore.username = result.username;\r\n      }\r\n\r\n      else if (result && result.success === false){\r\n        this.resetForm();\r\n        alert(result.msg);\r\n      }\r\n\r\n    } catch (e) {\r\n      console.log(e);\r\n      this.resetForm();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"loginForm\">\r\n          \r\n          Log In\r\n\r\n          <InputField\r\n            type='text'\r\n            placeholder='Username'\r\n            value={this.state.username ? this.state.username : ''}\r\n            onChange={ (val) => this.setInputValue('username', val)}\r\n          />\r\n\r\n          <InputField\r\n            type='password'\r\n            placeholder='Password'\r\n            value={this.state.password ? this.state.password : ''}\r\n            onChange={ (val) => this.setInputValue('password', val)}\r\n          />\r\n\r\n          <SumbitButton\r\n            text='Login'\r\n            disabled={this.state.buttonDisabled}\r\n            onClick={ () => this.doLogin() }\r\n          />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;","import React from 'react';\nimport { observer } from 'mobx-react';\nimport UserStore from './UserStore';\nimport LoginForm from './LoginForm';\nimport SumbitButton from './SubmitButton';\nimport './App.css';\n\nclass App extends React.Component {\n\n  async componentDidMount() {\n\n    try {\n\n      let res = await fetch('/isLoggedIn', {\n        method: 'post' ,\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      }\n\n      else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n    }\n\n    catch(e) {\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n\n  }\n\n  async doLogout() {\n\n    try {\n\n      let res = await fetch('/logout', {\n        method: 'post' ,\n        headers: {\n          'Accept': 'application/json',\n          'ContentType': 'application/json'\n        }\n      });\n\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.isLoggedIn = false;\n        UserStore.username = '';\n      }\n    }\n\n    catch(e) {\n      console.log(e)\n    }\n\n  }\n\n  render() {\n\n    if (UserStore.loading) {\n      return (\n        <div className=\"app\">\n          <div className='container'>\n            Loading, please wait..\n          </div>\n        </div>\n      )\n    }\n\n    else {\n\n      if (UserStore.isLoggedIn) {\n        return (\n          <div className=\"app\">\n            <div className='container'>\n              Welcome {UserStore.username}\n\n              <SumbitButton \n                text={'Log out'}\n                disabled={false}\n                onClick={ () => this.doLogout() }\n              />\n            </div>\n          </div>\n        )\n      }\n\n      return (\n        <div className=\"app\">\n          <div className='container'>\n            <LoginForm/>\n          </div>\n        </div>\n      );\n    }\n\n    \n  }\n}\n\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}